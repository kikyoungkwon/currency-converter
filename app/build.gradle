apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.kikyoung.currency"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.compileSdkVersion
        versionCode 1
        versionName "0.0.9"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            versionNameSuffix " Debug"
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        String sharedTestDir = 'src/testShared/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }
    // For Robolectric
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                maxHeapSize = "1024m"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":data")

    // Support
    implementation "androidx.navigation:navigation-fragment:$androidx_nav_version"
    implementation "androidx.navigation:navigation-ui:$androidx_nav_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"

    // Image Handling
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // Networking
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"

    // Log
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Koin
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    testImplementation("org.koin:koin-test:$koin_version") { exclude group: 'org.mockito' }
    androidTestImplementation("org.koin:koin-test:$koin_version") { exclude group: 'org.mockito' }

    // Memory leak detection
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

    // Test
    testImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    testImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_version"
    testImplementation "androidx.test.ext:junit:$androidx_test_ext_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "android.arch.core:core-testing:$arch_core_testing_version"
    debugImplementation("androidx.fragment:fragment-testing:$androidx_fragment_testing_versopm") {
        exclude group: 'androidx.test'
    }
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_test_junit_version"
    androidTestImplementation("com.squareup.okhttp3:mockwebserver:$mockwebserver_version")
    androidTestCompile "com.jakewharton.espresso:okhttp3-idling-resource:$okhttp3_idling_resource_version"

    // Mock
    testImplementation "io.mockk:mockk:$mockk_version"
}
